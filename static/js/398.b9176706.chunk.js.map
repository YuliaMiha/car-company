{"version":3,"file":"static/js/398.b9176706.chunk.js","mappings":"oOAmBA,MAwEA,EAxEmBA,KACjB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAAoBC,IAAyBF,EAAAA,EAAAA,UAAS,KACtDG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,IACxCK,EAAiBC,IAAsBN,EAAAA,EAAAA,WAAS,GACjDO,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IAC3BC,GAAYJ,EAAAA,EAAAA,IAAYK,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACRF,GACEG,EAAAA,EAAAA,IAAa,CACXC,KAAM,EACNC,YAAalB,EACbmB,KAAMtB,KAGVgB,GACEO,EAAAA,EAAAA,IAAqB,CACnBF,YAAalB,EACbmB,KAAMtB,IAET,GACA,CAACgB,EAAUb,EAAoBH,KAElCkB,EAAAA,EAAAA,YAAU,KACJX,GACFS,GAASQ,EAAAA,EAAAA,IAAiB,CAAEJ,KAAMf,IACpC,GACC,CAACW,EAAUX,EAAaE,IAyB3B,OACEkB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGb,IAAac,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACrBJ,EAAAA,EAAAA,MAACK,EAAAA,EAAO,CAAAH,SAAA,EACNC,EAAAA,EAAAA,KAACG,EAAAA,EAAY,CAACC,MAAM,2BACpBJ,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CACTrB,aAAcA,EACdsB,iBAzBiBC,IACvBlC,EAAgBkC,GAChB/B,EAAsB,IACtBE,EAAe,GACfE,GAAmB,EAAM,EAsBnB4B,uBAnBuBD,IAC7B/B,EAAsB+B,GACtBlC,EAAgB,IAChBK,EAAe,GACfE,GAAmB,EAAM,EAgBnB6B,yBAbyBA,CAACC,EAAYC,KAC5CvB,GAASwB,EAAAA,EAAAA,IAAsB,CAAEF,aAAYC,eAAc,KAcvDX,EAAAA,EAAAA,KAACa,EAAAA,EAAQ,CAAChC,KAAMA,EAAMiC,eAlCLA,KACrBpC,GAAeqC,GAAYA,EAAW,IACtCnC,GAAmB,EAAK,SAkCrB,C","sources":["pages/CarCatalog.jsx"],"sourcesContent":["import { CarsList } from '../components/CarList';\nimport { CarsFilter } from '../components/CarFilter';\nimport { Loader } from '../components/common/Loader';\nimport { Section } from '../components/common/Section';\nimport { SectionTitle } from '../components/common/SectionTitle';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectCarsItems,\n  selectFilterValues,\n  selectIsLoading,\n} from '../redux/selectors';\nimport {\n  getCarsByMileageThunk,\n  getCarsQuantityThunk,\n  getCarsThunk,\n  getMoreCarsThunk,\n} from '../redux/thunks';\n\nconst CarCatalog = () => {\n  const [selectedMake, setSelectedMake] = useState('');\n  const [selectedPriceRange, setSelectedPriceRange] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [shouldFetchMore, setShouldFetchMore] = useState(false);\n  const cars = useSelector(selectCarsItems);\n  const filterValues = useSelector(selectFilterValues);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      getCarsThunk({\n        page: 1,\n        rentalPrice: selectedPriceRange,\n        make: selectedMake,\n      })\n    );\n    dispatch(\n      getCarsQuantityThunk({\n        rentalPrice: selectedPriceRange,\n        make: selectedMake,\n      })\n    );\n  }, [dispatch, selectedPriceRange, selectedMake]);\n\n  useEffect(() => {\n    if (shouldFetchMore) {\n      dispatch(getMoreCarsThunk({ page: currentPage }));\n    }\n  }, [dispatch, currentPage, shouldFetchMore]);\n\n  const handleLoadMore = () => {\n    setCurrentPage(prevPage => prevPage + 1);\n    setShouldFetchMore(true);\n  };\n\n  const handleMakeChange = value => {\n    setSelectedMake(value);\n    setSelectedPriceRange('');\n    setCurrentPage(1);\n    setShouldFetchMore(false);\n  };\n\n  const handlePriceRangeChange = value => {\n    setSelectedPriceRange(value);\n    setSelectedMake('');\n    setCurrentPage(1);\n    setShouldFetchMore(false);\n  };\n\n  const handleApplyMileageFilter = (minMileage, maxMileage) => {\n    dispatch(getCarsByMileageThunk({ minMileage, maxMileage }));\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <Section>\n        <SectionTitle title=\"Find a car in Catalog\" />\n        <CarsFilter\n          filterValues={filterValues}\n          handleMakeChange={handleMakeChange}\n          handlePriceRangeChange={handlePriceRangeChange}\n          handleApplyMileageFilter={handleApplyMileageFilter}\n        />\n        <CarsList cars={cars} handleLoadMore={handleLoadMore} />\n      </Section>\n    </>\n  );\n};\n\nexport default CarCatalog;\n"],"names":["CarCatalog","selectedMake","setSelectedMake","useState","selectedPriceRange","setSelectedPriceRange","currentPage","setCurrentPage","shouldFetchMore","setShouldFetchMore","cars","useSelector","selectCarsItems","filterValues","selectFilterValues","isLoading","selectIsLoading","dispatch","useDispatch","useEffect","getCarsThunk","page","rentalPrice","make","getCarsQuantityThunk","getMoreCarsThunk","_jsxs","_Fragment","children","_jsx","Loader","Section","SectionTitle","title","CarsFilter","handleMakeChange","value","handlePriceRangeChange","handleApplyMileageFilter","minMileage","maxMileage","getCarsByMileageThunk","CarsList","handleLoadMore","prevPage"],"sourceRoot":""}